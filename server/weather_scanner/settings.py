"""
Django settings for weather_scanner project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from os import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-w289^$s#(p0#z_ly!v2_z+lt$@hwl97+&f6xqcpb)b)p)jkdr@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "django.local",
    "127.0.0.1",
    "localhost"
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'weather_scanner.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["./weather_src/templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'weather_scanner.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': environ.get('DB_NAME', 'weatherdb'),
        'USER': environ.get('DB_USER', 'utente'),
        'PASSWORD': environ.get('DB_PASSWORD', 'passwd'),
        'HOST': environ.get('DB_HOST', '127.0.0.1'),
        'PORT': environ.get('DB_PORT', '3306'),
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# AWS SNS Settings
AWS_REGION = 'us-east-1'
SNS_TOPIC_ARN = 'arn:aws:sns:us-east-1:116695809482:weather-daily-notifications'

# -------------------------------------------------

# AWS Cognito Settings
COGNITO_USER_POOL_ID = environ.get('COGNITO_USER_POOL_ID', 'us-east-1_efgqJvIlr')
COGNITO_APP_CLIENT_ID = environ.get('COGNITO_APP_CLIENT_ID', '4e74qql1vri350oeajtptds6p7')
COGNITO_DOMAIN = environ.get('COGNITO_DOMAIN', 'https://weather-scanner-app.auth.us-east-1.amazoncognito.com')

# URL di callback nella tua app Django. Deve corrispondere a quello in Terraform.
COGNITO_REDIRECT_URI = environ.get('COGNITO_REDIRECT_URI', 'http://localhost:8000/cognito/google/callback/')
LOGOUT_REDIRECT_URI = environ.get('LOGOUT_REDIRECT_URI', 'http://localhost:8000/login/')

# Nome dell'identity provider (deve corrispondere a "Google" come definito in Terraform)
COGNITO_IDENTITY_PROVIDER = environ.get('COGNITO_IDENTITY_PROVIDER', 'Google')

# Endpoint per lo scambio di token
COGNITO_TOKEN_URL = f'{COGNITO_DOMAIN}/oauth2/token'
COGNITO_USERINFO_URL = f'{COGNITO_DOMAIN}/oauth2/userInfo'
