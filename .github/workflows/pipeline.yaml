name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: TUO_PROJECT_ID  # Sostituisci con il tuo Project ID di Google Cloud
  GKE_CLUSTER: tuo-cluster      # Sostituisci con il nome del tuo cluster GKE
  GKE_ZONE: europe-west1-b      # Sostituisci con la zona del tuo cluster GKE
  DEPLOYMENT_NAME: django-app # Sostituisci con il nome del tuo deployment in GKE

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # - name: Authenticate to Google Cloud
    #   id: auth
    #   uses: 'google-github-actions/auth@v2'
    #   with:
    #     workload_identity_provider: 'projects/NUMERO_PROGETTO/locations/global/workloadIdentityPools/NOME_POOL/providers/NOME_PROVIDER' # Sostituisci con il tuo WIF Provider
    #     service_account: 'NOME_SA@TUO_PROGETTO_ID.iam.gserviceaccount.com' # Sostituisci con il tuo Service Account

    # - name: Set up Cloithud SDK
    #   uses: 'google-gub-actions/setup-gcloud@v2'

    # Login a Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: antoniolauro
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and Push Docker Image
      run: |-
        docker build -t "antoniolauro/webapp:${{ github.sha }}" -t "antoniolauro/webapp:latest" . 
        docker push -a "antoniolauro/webapp"

    # - name: Get GKE credentials
    #   run: gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}

    # - name: Deploy to GKE
    #   run: |-
    #     kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.IMAGE }}=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
    #     kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}